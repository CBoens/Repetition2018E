I Collections klasssen:


//Arrays
// myInts indeholder heltal
// Lav full properties til myInts
 
		private int[] myInts = new[] {1, 34, 5, 6};

        private List<int> myIntList = new List<int>(){12,34,5,67,7};

        public List<int> MyIntList
        {
            set { myIntList = value; }
            get { return myIntList; }
        }
       
//myNames indeholder et number og et tilhørende navn
// Lav full properties til myNames

        private Dictionary<int, string> myNames = new Dictionary<int, string>();

// Lav dit eget eksempel, som definerer et array, en List og et Dictionary
        
public void TestArray()
{}

// Lav i metoden TestArray nogle sætninger:
//  som indsætter et tal på pladsen til indeks 3
//  som udskriver alle elementer i arrayet
// som udskriver tallene i arrayet bagfra
// Giv eksempler på foreach- , for- og while loops


public void TestList()
{}

// Lav i metoden TestList sætninger, 
//  som tilføjer et tal til listen bagerst
//  som indsætter tallet 45 på indekspladsen 2 i listen
//  som fjerner tallet som er placeret på plads 4
// som erstatter det eksisterende tal på indeks 2 med tallet 22
// som udskriver listen vha. foreach
// som checker om der eksisterer tallet 2 i listen og hvis det gør så udskriv en sætning om, at det eksisterer
// som sorterer listen

// Lav sætninger som laver de samme operationer med din egen liste.

// Lav en metode, SumList, som løber listen igennem og lægger alle tallene samme. 
// hvis der forekommer et negativt tal, skal der kastes en exception, NegativeNumberException, som du selv skal definere

public int SumList()
{}


 public void TestDictionary()
        {
            // Lav læstninger, som tilføjer de studerendes navne til Dictionary'et myNames og som key angives et tal mellem 1 -10
            // Lav sætninger der checker om der findes et navn inder key 4
            // Hvis der findes et navn under key 4 skal det fjernes
            // Lav sætninger, som udskriver alle values i myNames
            // Lav sætninger, som tilføjer manipulerer dit eget dictionary

        }



Lav Nye klasser: 


// Lav en class Student med properties til navn, cpr, adresse og mobil
// lav en ToString metode i klassen
// Lav en konstuktor, som initialiserer klassens properties
// Lav 3 subklasser, DanishStudent, EUStudent, NonEUStudent som arver fra student klassen
// TIlføj yderligere properties til hver klasse, som kan være nødvendige for hver klasse
// Lav Konstuktører og ToString i de 3 subklasser
// Lav en virtual metode i Student, GetSU, som returnerer, hvor meget der gives i SU
// Override metoden GetSU i subklasserne. 
// Overvej, om der skal laves yderligerer subklasser til DanishStudent, for at angive det korrekte beløb af SU
// Overvej om nogle af klasserne kunne laves abstrakte
// Tilføj et antal af hver klasse til en List<Student> students
// Lav en løkke, som udskriver alle oplysninger om hver student i listen og som oplyser bl.a. det beløb de får i SU
